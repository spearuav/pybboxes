name: CI and Release

on:
  push:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # for Python 3.10, ref https://github.com/actions/setup-python/issues/160#issuecomment-724485470
        python-version: [3.8, 3.9, '3.10', '3.11']
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore Ubuntu cache
        uses: actions/cache@v3
        if: matrix.operating-system == 'ubuntu-latest'
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
          restore-keys: ${{ matrix.os }}-${{ matrix.python-version }}-

      - name: Restore MacOS cache
        uses: actions/cache@v3
        if: matrix.operating-system == 'macos-latest'
        with:
          path: ~/Library/Caches/pip
          key: ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
          restore-keys: ${{ matrix.os }}-${{ matrix.python-version }}-

      - name: Restore Windows cache
        uses: actions/cache@v3
        if: matrix.operating-system == 'windows-latest'
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
          restore-keys: ${{ matrix.os }}-${{ matrix.python-version }}-

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: >
          pip install -e .[dev]

      - name: Run tests.
        run: |
          python -m tests.run_tests

      - name: Install dependencies for release
        if: github.ref_type == 'tag'
        run: |
          pip install setuptools wheel twine

      - name: Build
        if: github.ref_type == 'tag'
        run: |
          python setup.py sdist bdist_wheel

      - name: Create Release
        if: github.ref_type == 'tag' && matrix.python-version == '3.9'
        uses: softprops/action-gh-release@v0.1.15
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/*
